{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<div class="section-wrapper product-wrapper">
	<div class="product" itemscope itemtype="http://schema.org/Product">
	
		<meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
		<meta itemprop="image" content="{{ product | img_url: 'grande' }}" />

	
		<form action="/cart/add" method="post" enctype="multipart/form-data">

			{% if product.images.size > 0 %}
				{% comment %}<div class="product-photos {% if product.images.size > 0 %}col-1-4{% endif %}">{% endcomment %}
				<div class="product-photos left">
			
					{% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
					<div class="product-photo-container">
						<div class="tile-image center-bg" style="background-image: url({{ featured_image | img_url: 'large' }});" alt="{{ product.title | escape }}"></div>
					</div>

					{% if product.images.size > 1 %}
						<ul class="product-photo-thumbs clearfix grid">
							{% for image in product.images %}
								{% if image.alt == 'nutrition' %}
									<li class="product-photo-thumb">
										<a href="{{ image | img_url: 'large' }}">
											<img src="{{ image | img_url: 'large' }}" alt="{{ image.alt | escape }}" class="nutrition-img" />
										</a>
									</li>
								{% endif %}
							{% endfor %}
						</ul>
					{% endif %}

				</div><!-- .product-photos -->
			{% endif %}
			
			{% comment %}<div class="product-details {% if product.images.size != 0 %}col-3-4{% endif %}">{% endcomment %}
			<div class="product-details">
				
				<div class="product-meta">
					<div class="left">
						<h1 itemprop="name" class="product-title section-title">{{ product.title }}</h1>
						<div class="product-price section-title" itemprop="price">{{ product.price | money }}</div>
					</div><!-- end .left -->

					<div class="right">
						<div id="product-add">
							<input type="submit" name="add" id="add" class="primary button" value="{{ add_to_cart | escape }}">
						</div>
					</div><!-- end .right -->
					<div class="clear"></div>

					{% assign hide_default_title = false %}
					{% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
						{% assign hide_default_title = true %}
					{% endif %}       

					<div id="product-variants" class="{% if hide_default_title %} hidden{% endif %}">
						<div class="left">

						</div><!-- end .left -->

						<div class="right">
							<select id="product-select" name="id">
							{% for variant in product.variants %}
								<option{% if variant == product.selected_or_first_available_variant %} selected{% endif %} value="{{ variant.id }}">
								{{ variant.title }} - {{ variant.price | money }}
								</option>
							{% endfor %}
							</select>
						</div><!-- end .right -->
						<div class="clear"></div>

					</div>        
								 
					<div id="backorder" class="hidden">
						<p>{{ '%s is back-ordered. We will ship it separately in 10 to 15 days.' | replace: '%s', '<span id="selected-variant"></span>' }}</p>
					</div>
				</div><!-- end .product-meta -->
				
				<div id="product-description" class="rte" itemprop="description">
					{{ product.description }}

					{% if collection and collection.products.count > 1 %}
						<div class="related-products">
							<h1>Related Products</h1>
							<ul class="grid clearfix products-grid">
								{% assign cur_title = product.title %}
								{% assign products_per_row = 'five-per-row' %}
								{% for product in collection.products limit: 6 %}
									{% if product.title != cur_title %}
										{% include 'product-grid-item' %}
									{% endif %}
								{% endfor %}
							</ul><!-- end .products-grid -->
						</div><!-- end .related-products -->
					{% endif %}

				</div>

			</div><!-- .product-details -->
			<div class="clear"></div>

		</form>
	</div><!-- end .product -->

</div><!-- end .section-wrapper -->

<script>
	
var selectCallback = function(variant, selector) {

	if (variant) {
		
		// Swap image.
		if (variant.featured_image) {
			var newImage = variant.featured_image; // New image object.
			var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
			Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
		}
		
		// Selected a valid variant that is available.
		if (variant.available) {
					
			// Enabling add to cart button.
			jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
		
			// If item is backordered yet can still be ordered, we'll show special message.
			if (variant.inventory_management && variant.inventory_quantity <= 0) {
				jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
				jQuery('#backorder').removeClass("hidden");
			} else {
				jQuery('#backorder').addClass("hidden");
			}
			
		} else {
			// Variant is sold out.
			jQuery('#backorder').addClass('hidden');
			jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
		}
		
		// Whether the variant is in stock or not, we can update the price and compare at price.
		if ( variant.compare_at_price > variant.price ) {
			jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
		} else {
			jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
		}        

	} else {
		// variant doesn't exist.
		jQuery('#product-price').empty();
		jQuery('#backorder').addClass('hidden');
		jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
	}

};
	
jQuery(function($) {

	new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
	
	// Add label if only one product option and it isn't 'Title'.
	{% if product.options.size == 1 and product.options.first != 'Title' %}
		$('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
	{% endif %}

});

Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>